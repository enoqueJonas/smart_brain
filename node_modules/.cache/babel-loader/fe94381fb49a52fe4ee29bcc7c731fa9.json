{"ast":null,"code":"var _jsxFileName = \"/Users/enoquejonas/Desktop/Web Projects/smart_brain/src/App.js\";\nimport { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn.js';\nimport Register from './components/Register/Register.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 120,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst app = new Clarifai.App({\n  apiKey: '1c49d84c8cbb4745ba5ba626ebf71e65'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clariFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      return {\n        left_col: clariFace.left_col * width,\n        top_row: clariFace.top_row * height,\n        right_col: width - clariFace.right_col * width,\n        bottom_row: height - clariFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signOut') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signn',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      imageUrl,\n      isSignedIn,\n      box,\n      route\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this) : route === 'signIn' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/enoquejonas/Desktop/Web Projects/smart_brain/src/App.js"],"names":["Component","Navigation","Logo","ImageLinkForm","Rank","Particles","Clarifai","FaceRecognition","SignIn","Register","particlesOptions","particles","number","value","density","enable","value_area","app","App","apiKey","constructor","loadUser","data","setState","user","id","name","email","password","entries","joined","calculateFaceLocation","clariFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js'\nimport Logo from './components/Logo/Logo.js'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn.js'\nimport Register from './components/Register/Register.js'\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 120,\n      density: {\n        enable: true, \n        value_area: 800\n      } \n    }\n  }\n}\n\nconst app = new Clarifai.App({\n  apiKey: '1c49d84c8cbb4745ba5ba626ebf71e65'\n})\n\nclass App extends Component{\n  \n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signn',\n      isSignedIn: false,\n      user: {\n        id:'',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState( {user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      password: data.password,\n      entries: data.entries,\n      joined: data.joined\n      } \n    })\n  } \n\n  calculateFaceLocation = (data) => {\n    const clariFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return{\n      left_col: clariFace.left_col * width,\n      top_row: clariFace.top_row * height,\n      right_col: width - clariFace.right_col * width,\n      bottom_row: height- clariFace.bottom_row * height\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    app.models\n    .predict(\n    Clarifai.FACE_DETECT_MODEL,\n     this.state.input\n    )\n    .then(response => {\n      if(response){\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {\n            'Content-Type':'application/json'\n          },\n          body: JSON.stringify({\n            id:this.state.user.id\n          })\n        })\n        .then(response => response.json)\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries: count }))\n        })\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signOut') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render(){\n    const { imageUrl, isSignedIn, box, route } = this.state\n    return (\n      <div className=\"App\">\n        <Particles className='particles' params={ particlesOptions }/>\n        <Navigation isSignedIn = { isSignedIn } onRouteChange = { this.onRouteChange }/>\n        { route === 'home' \n        ? <div>\n            <Logo />\n            <Rank name = { this.state.user.name }  entries = { this.state.user.entries }/>\n            <ImageLinkForm onInputChange = { this.onInputChange } onButtonSubmit = { this.onButtonSubmit }/>\n            <FaceRecognition box = { box } imageUrl = { imageUrl }/>\n          </div> \n        : (\n          route === 'signIn'\n          ? <SignIn onRouteChange = { this.onRouteChange } />\n          : <Register loadUser = { this.loadUser } onRouteChange = { this.onRouteChange }/>\n        )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}