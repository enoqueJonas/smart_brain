{"ast":null,"code":"var _jsxFileName = \"/Users/enoquejonas/Desktop/Web Projects/smart_brain/src/App.js\";\nimport { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn.js';\nimport Register from './components/Register/Register.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 120,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clariFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      return {\n        left_col: clariFace.left_col * width,\n        top_row: clariFace.top_row * height,\n        right_col: width - clariFace.right_col * width,\n        bottom_row: height - clariFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.input\n        })\n      }).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signOut') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      imageUrl,\n      isSignedIn,\n      box,\n      route\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this) : route === 'signIn' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/enoquejonas/Desktop/Web Projects/smart_brain/src/App.js"],"names":["Component","Navigation","Logo","ImageLinkForm","Rank","Particles","FaceRecognition","SignIn","Register","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","password","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clariFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js'\nimport Logo from './components/Logo/Logo.js'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn.js'\nimport Register from './components/Register/Register.js'\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 120,\n      density: {\n        enable: true, \n        value_area: 800\n      } \n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signIn',\n  isSignedIn: false,\n  user: {\n    id:'',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component{\n  \n  constructor(){\n    super();\n    this.state = initialState;\n    \n  }\n\n  loadUser = (data) => {\n    this.setState( {user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      password: data.password,\n      entries: data.entries,\n      joined: data.joined\n      } \n    })\n  } \n\n  calculateFaceLocation = (data) => {\n    const clariFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return{\n      left_col: clariFace.left_col * width,\n      top_row: clariFace.top_row * height,\n      right_col: width - clariFace.right_col * width,\n      bottom_row: height- clariFace.bottom_row * height\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    fetch('http://localhost:3000/imageurl', {\n          method: 'post',\n          headers: {\n            'Content-Type':'application/json'\n          },\n          body: JSON.stringify({\n            id:this.state.input\n          })\n        })\n    .then(response => {\n      if(response){\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {\n            'Content-Type':'application/json'\n          },\n          body: JSON.stringify({\n            id:this.state.user.id\n          })\n        })\n        .then(response => response.json)\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries: count }))\n        }).catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signOut') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render(){\n    const { imageUrl, isSignedIn, box, route } = this.state\n    return (\n      <div className=\"App\">\n        <Particles className='particles' params={ particlesOptions }/>\n        <Navigation isSignedIn = { isSignedIn } onRouteChange = { this.onRouteChange }/>\n        { route === 'home' \n        ? <div>\n            <Logo />\n            <Rank name = { this.state.user.name }  entries = { this.state.user.entries }/>\n            <ImageLinkForm onInputChange = { this.onInputChange } onButtonSubmit = { this.onButtonSubmit }/>\n            <FaceRecognition box = { box } imageUrl = { imageUrl }/>\n          </div> \n        : (\n          route === 'signIn'\n          ? <SignIn onRouteChange = { this.onRouteChange } loadUser = { this.loadUser } />\n          : <Register loadUser = { this.loadUser } onRouteChange = { this.onRouteChange }/>\n        )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}