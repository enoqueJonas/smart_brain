{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcEasing = exports.collisionVelocity = exports.getParticleBaseVelocity = exports.getParticleDirectionAngle = exports.getDistance = exports.getDistances = exports.getValue = exports.setRangeValue = exports.getRangeMax = exports.getRangeMin = exports.getRangeValue = exports.randomInRange = exports.mix = exports.clamp = void 0;\n\nconst Enums_1 = require(\"../Enums\");\n\nconst Vector_1 = require(\"../Core/Particle/Vector\");\n\nfunction clamp(num, min, max) {\n  return Math.min(Math.max(num, min), max);\n}\n\nexports.clamp = clamp;\n\nfunction mix(comp1, comp2, weight1, weight2) {\n  return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\n\nexports.mix = mix;\n\nfunction randomInRange(r) {\n  const max = getRangeMax(r);\n  let min = getRangeMin(r);\n\n  if (max === min) {\n    min = 0;\n  }\n\n  return Math.random() * (max - min) + min;\n}\n\nexports.randomInRange = randomInRange;\n\nfunction getRangeValue(value) {\n  return typeof value === \"number\" ? value : randomInRange(value);\n}\n\nexports.getRangeValue = getRangeValue;\n\nfunction getRangeMin(value) {\n  return typeof value === \"number\" ? value : value.min;\n}\n\nexports.getRangeMin = getRangeMin;\n\nfunction getRangeMax(value) {\n  return typeof value === \"number\" ? value : value.max;\n}\n\nexports.getRangeMax = getRangeMax;\n\nfunction setRangeValue(source, value) {\n  if (source === value || value === undefined && typeof source === \"number\") {\n    return source;\n  }\n\n  const min = getRangeMin(source),\n        max = getRangeMax(source);\n  return value !== undefined ? {\n    min: Math.min(min, value),\n    max: Math.max(max, value)\n  } : setRangeValue(min, max);\n}\n\nexports.setRangeValue = setRangeValue;\n\nfunction getValue(options) {\n  const random = options.random;\n  const {\n    enable,\n    minimumValue\n  } = typeof random === \"boolean\" ? {\n    enable: random,\n    minimumValue: 0\n  } : random;\n  return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\n\nexports.getValue = getValue;\n\nfunction getDistances(pointA, pointB) {\n  const dx = pointA.x - pointB.x;\n  const dy = pointA.y - pointB.y;\n  return {\n    dx: dx,\n    dy: dy,\n    distance: Math.sqrt(dx * dx + dy * dy)\n  };\n}\n\nexports.getDistances = getDistances;\n\nfunction getDistance(pointA, pointB) {\n  return getDistances(pointA, pointB).distance;\n}\n\nexports.getDistance = getDistance;\n\nfunction getParticleDirectionAngle(direction) {\n  if (typeof direction === \"number\") {\n    return direction * Math.PI / 180;\n  } else {\n    switch (direction) {\n      case Enums_1.MoveDirection.top:\n        return -Math.PI / 2;\n\n      case Enums_1.MoveDirection.topRight:\n        return -Math.PI / 4;\n\n      case Enums_1.MoveDirection.right:\n        return 0;\n\n      case Enums_1.MoveDirection.bottomRight:\n        return Math.PI / 4;\n\n      case Enums_1.MoveDirection.bottom:\n        return Math.PI / 2;\n\n      case Enums_1.MoveDirection.bottomLeft:\n        return 3 * Math.PI / 4;\n\n      case Enums_1.MoveDirection.left:\n        return Math.PI;\n\n      case Enums_1.MoveDirection.topLeft:\n        return -3 * Math.PI / 4;\n\n      case Enums_1.MoveDirection.none:\n      default:\n        return Math.random() * Math.PI * 2;\n    }\n  }\n}\n\nexports.getParticleDirectionAngle = getParticleDirectionAngle;\n\nfunction getParticleBaseVelocity(direction) {\n  const baseVelocity = Vector_1.Vector.origin;\n  baseVelocity.length = 1;\n  baseVelocity.angle = direction;\n  return baseVelocity;\n}\n\nexports.getParticleBaseVelocity = getParticleBaseVelocity;\n\nfunction collisionVelocity(v1, v2, m1, m2) {\n  return Vector_1.Vector.create(v1.x * (m1 - m2) / (m1 + m2) + v2.x * 2 * m2 / (m1 + m2), v1.y);\n}\n\nexports.collisionVelocity = collisionVelocity;\n\nfunction calcEasing(value, type) {\n  switch (type) {\n    case Enums_1.EasingType.easeOutQuad:\n      return 1 - Math.pow(1 - value, 2);\n\n    case Enums_1.EasingType.easeOutCubic:\n      return 1 - Math.pow(1 - value, 3);\n\n    case Enums_1.EasingType.easeOutQuart:\n      return 1 - Math.pow(1 - value, 4);\n\n    case Enums_1.EasingType.easeOutQuint:\n      return 1 - Math.pow(1 - value, 5);\n\n    case Enums_1.EasingType.easeOutExpo:\n      return value === 1 ? 1 : 1 - Math.pow(2, -10 * value);\n\n    case Enums_1.EasingType.easeOutSine:\n      return Math.sin(value * Math.PI / 2);\n\n    case Enums_1.EasingType.easeOutBack:\n      {\n        const c1 = 1.70158;\n        const c3 = c1 + 1;\n        return 1 + c3 * Math.pow(value - 1, 3) + c1 * Math.pow(value - 1, 2);\n      }\n\n    case Enums_1.EasingType.easeOutCirc:\n      return Math.sqrt(1 - Math.pow(value - 1, 2));\n\n    default:\n      return value;\n  }\n}\n\nexports.calcEasing = calcEasing;","map":{"version":3,"sources":["/Users/enoquejonas/Desktop/Web Projects/facerecognitionbrain/node_modules/tsparticles/Utils/NumberUtils.js"],"names":["Object","defineProperty","exports","value","calcEasing","collisionVelocity","getParticleBaseVelocity","getParticleDirectionAngle","getDistance","getDistances","getValue","setRangeValue","getRangeMax","getRangeMin","getRangeValue","randomInRange","mix","clamp","Enums_1","require","Vector_1","num","min","max","Math","comp1","comp2","weight1","weight2","floor","r","random","source","undefined","options","enable","minimumValue","pointA","pointB","dx","x","dy","y","distance","sqrt","direction","PI","MoveDirection","top","topRight","right","bottomRight","bottom","bottomLeft","left","topLeft","none","baseVelocity","Vector","origin","length","angle","v1","v2","m1","m2","create","type","EasingType","easeOutQuad","pow","easeOutCubic","easeOutQuart","easeOutQuint","easeOutExpo","easeOutSine","sin","easeOutBack","c1","c3","easeOutCirc"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calcEasing = exports.collisionVelocity = exports.getParticleBaseVelocity = exports.getParticleDirectionAngle = exports.getDistance = exports.getDistances = exports.getValue = exports.setRangeValue = exports.getRangeMax = exports.getRangeMin = exports.getRangeValue = exports.randomInRange = exports.mix = exports.clamp = void 0;\nconst Enums_1 = require(\"../Enums\");\nconst Vector_1 = require(\"../Core/Particle/Vector\");\nfunction clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexports.clamp = clamp;\nfunction mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexports.mix = mix;\nfunction randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return Math.random() * (max - min) + min;\n}\nexports.randomInRange = randomInRange;\nfunction getRangeValue(value) {\n    return typeof value === \"number\" ? value : randomInRange(value);\n}\nexports.getRangeValue = getRangeValue;\nfunction getRangeMin(value) {\n    return typeof value === \"number\" ? value : value.min;\n}\nexports.getRangeMin = getRangeMin;\nfunction getRangeMax(value) {\n    return typeof value === \"number\" ? value : value.max;\n}\nexports.getRangeMax = getRangeMax;\nfunction setRangeValue(source, value) {\n    if (source === value || (value === undefined && typeof source === \"number\")) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexports.setRangeValue = setRangeValue;\nfunction getValue(options) {\n    const random = options.random;\n    const { enable, minimumValue } = typeof random === \"boolean\" ? { enable: random, minimumValue: 0 } : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexports.getValue = getValue;\nfunction getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x;\n    const dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx * dx + dy * dy) };\n}\nexports.getDistances = getDistances;\nfunction getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexports.getDistance = getDistance;\nfunction getParticleDirectionAngle(direction) {\n    if (typeof direction === \"number\") {\n        return (direction * Math.PI) / 180;\n    }\n    else {\n        switch (direction) {\n            case Enums_1.MoveDirection.top:\n                return -Math.PI / 2;\n            case Enums_1.MoveDirection.topRight:\n                return -Math.PI / 4;\n            case Enums_1.MoveDirection.right:\n                return 0;\n            case Enums_1.MoveDirection.bottomRight:\n                return Math.PI / 4;\n            case Enums_1.MoveDirection.bottom:\n                return Math.PI / 2;\n            case Enums_1.MoveDirection.bottomLeft:\n                return (3 * Math.PI) / 4;\n            case Enums_1.MoveDirection.left:\n                return Math.PI;\n            case Enums_1.MoveDirection.topLeft:\n                return (-3 * Math.PI) / 4;\n            case Enums_1.MoveDirection.none:\n            default:\n                return Math.random() * Math.PI * 2;\n        }\n    }\n}\nexports.getParticleDirectionAngle = getParticleDirectionAngle;\nfunction getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector_1.Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexports.getParticleBaseVelocity = getParticleBaseVelocity;\nfunction collisionVelocity(v1, v2, m1, m2) {\n    return Vector_1.Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexports.collisionVelocity = collisionVelocity;\nfunction calcEasing(value, type) {\n    switch (type) {\n        case Enums_1.EasingType.easeOutQuad:\n            return 1 - Math.pow((1 - value), 2);\n        case Enums_1.EasingType.easeOutCubic:\n            return 1 - Math.pow((1 - value), 3);\n        case Enums_1.EasingType.easeOutQuart:\n            return 1 - Math.pow((1 - value), 4);\n        case Enums_1.EasingType.easeOutQuint:\n            return 1 - Math.pow((1 - value), 5);\n        case Enums_1.EasingType.easeOutExpo:\n            return value === 1 ? 1 : 1 - Math.pow(2, -10 * value);\n        case Enums_1.EasingType.easeOutSine:\n            return Math.sin((value * Math.PI) / 2);\n        case Enums_1.EasingType.easeOutBack: {\n            const c1 = 1.70158;\n            const c3 = c1 + 1;\n            return 1 + c3 * Math.pow(value - 1, 3) + c1 * Math.pow(value - 1, 2);\n        }\n        case Enums_1.EasingType.easeOutCirc:\n            return Math.sqrt(1 - Math.pow(value - 1, 2));\n        default:\n            return value;\n    }\n}\nexports.calcEasing = calcEasing;\n"]},"metadata":{},"sourceType":"script"}