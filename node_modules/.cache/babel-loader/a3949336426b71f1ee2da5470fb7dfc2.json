{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Attractor = void 0;\n\nconst Utils_1 = require(\"../../../Utils\");\n\nconst ParticlesInteractorBase_1 = require(\"../../../Core/ParticlesInteractorBase\");\n\nclass Attractor extends ParticlesInteractorBase_1.ParticlesInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n\n  interact(p1) {\n    var _a;\n\n    const container = this.container,\n          distance = (_a = p1.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance,\n          pos1 = p1.getPosition(),\n          query = container.particles.quadTree.queryCircle(pos1, distance);\n\n    for (const p2 of query) {\n      if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n        continue;\n      }\n\n      const pos2 = p2.getPosition(),\n            {\n        dx,\n        dy\n      } = Utils_1.getDistances(pos1, pos2),\n            rotate = p1.options.move.attract.rotate,\n            ax = dx / (rotate.x * 1000),\n            ay = dy / (rotate.y * 1000),\n            p1Factor = p2.size.value / p1.size.value,\n            p2Factor = 1 / p1Factor;\n      p1.velocity.x -= ax * p1Factor;\n      p1.velocity.y -= ay * p1Factor;\n      p2.velocity.x += ax * p2Factor;\n      p2.velocity.y += ay * p2Factor;\n    }\n  }\n\n  isEnabled(particle) {\n    return particle.options.move.attract.enable;\n  }\n\n  reset() {}\n\n}\n\nexports.Attractor = Attractor;","map":{"version":3,"sources":["/Users/enoquejonas/Desktop/Web Projects/facerecognitionbrain/node_modules/tsparticles/Interactions/Particles/Attract/Attractor.js"],"names":["Object","defineProperty","exports","value","Attractor","Utils_1","require","ParticlesInteractorBase_1","ParticlesInteractorBase","constructor","container","interact","p1","_a","distance","attractDistance","retina","pos1","getPosition","query","particles","quadTree","queryCircle","p2","options","move","attract","enable","destroyed","spawning","pos2","dx","dy","getDistances","rotate","ax","x","ay","y","p1Factor","size","p2Factor","velocity","isEnabled","particle","reset"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,MAAMC,yBAAyB,GAAGD,OAAO,CAAC,uCAAD,CAAzC;;AACA,MAAMF,SAAN,SAAwBG,yBAAyB,CAACC,uBAAlD,CAA0E;AACtEC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,UAAMA,SAAN;AACH;;AACDC,EAAAA,QAAQ,CAACC,EAAD,EAAK;AACT,QAAIC,EAAJ;;AACA,UAAMH,SAAS,GAAG,KAAKA,SAAvB;AAAA,UAAkCI,QAAQ,GAAG,CAACD,EAAE,GAAGD,EAAE,CAACG,eAAT,MAA8B,IAA9B,IAAsCF,EAAE,KAAK,KAAK,CAAlD,GAAsDA,EAAtD,GAA2DH,SAAS,CAACM,MAAV,CAAiBD,eAAzH;AAAA,UAA0IE,IAAI,GAAGL,EAAE,CAACM,WAAH,EAAjJ;AAAA,UAAmKC,KAAK,GAAGT,SAAS,CAACU,SAAV,CAAoBC,QAApB,CAA6BC,WAA7B,CAAyCL,IAAzC,EAA+CH,QAA/C,CAA3K;;AACA,SAAK,MAAMS,EAAX,IAAiBJ,KAAjB,EAAwB;AACpB,UAAIP,EAAE,KAAKW,EAAP,IAAa,CAACA,EAAE,CAACC,OAAH,CAAWC,IAAX,CAAgBC,OAAhB,CAAwBC,MAAtC,IAAgDJ,EAAE,CAACK,SAAnD,IAAgEL,EAAE,CAACM,QAAvE,EAAiF;AAC7E;AACH;;AACD,YAAMC,IAAI,GAAGP,EAAE,CAACL,WAAH,EAAb;AAAA,YAA+B;AAAEa,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAa3B,OAAO,CAAC4B,YAAR,CAAqBhB,IAArB,EAA2Ba,IAA3B,CAA5C;AAAA,YAA8EI,MAAM,GAAGtB,EAAE,CAACY,OAAH,CAAWC,IAAX,CAAgBC,OAAhB,CAAwBQ,MAA/G;AAAA,YAAuHC,EAAE,GAAGJ,EAAE,IAAIG,MAAM,CAACE,CAAP,GAAW,IAAf,CAA9H;AAAA,YAAoJC,EAAE,GAAGL,EAAE,IAAIE,MAAM,CAACI,CAAP,GAAW,IAAf,CAA3J;AAAA,YAAiLC,QAAQ,GAAGhB,EAAE,CAACiB,IAAH,CAAQrC,KAAR,GAAgBS,EAAE,CAAC4B,IAAH,CAAQrC,KAApN;AAAA,YAA2NsC,QAAQ,GAAG,IAAIF,QAA1O;AACA3B,MAAAA,EAAE,CAAC8B,QAAH,CAAYN,CAAZ,IAAiBD,EAAE,GAAGI,QAAtB;AACA3B,MAAAA,EAAE,CAAC8B,QAAH,CAAYJ,CAAZ,IAAiBD,EAAE,GAAGE,QAAtB;AACAhB,MAAAA,EAAE,CAACmB,QAAH,CAAYN,CAAZ,IAAiBD,EAAE,GAAGM,QAAtB;AACAlB,MAAAA,EAAE,CAACmB,QAAH,CAAYJ,CAAZ,IAAiBD,EAAE,GAAGI,QAAtB;AACH;AACJ;;AACDE,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,WAAOA,QAAQ,CAACpB,OAAT,CAAiBC,IAAjB,CAAsBC,OAAtB,CAA8BC,MAArC;AACH;;AACDkB,EAAAA,KAAK,GAAG,CACP;;AAtBqE;;AAwB1E3C,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attractor = void 0;\nconst Utils_1 = require(\"../../../Utils\");\nconst ParticlesInteractorBase_1 = require(\"../../../Core/ParticlesInteractorBase\");\nclass Attractor extends ParticlesInteractorBase_1.ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    interact(p1) {\n        var _a;\n        const container = this.container, distance = (_a = p1.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = Utils_1.getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\nexports.Attractor = Attractor;\n"]},"metadata":{},"sourceType":"script"}